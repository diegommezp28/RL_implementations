@misc{hyperthreading-intel,
  title   = {What is hyper-threading?},
  url     = {https://www.intel.com/content/www/us/en/gaming/resources/hyper-threading.html#:~:text=Intel%C2%AE%20Hyper%2DThreading%20Technology%20is%20a%20hardware%20innovation%20that,execution%20contexts%20per%20physical%20core.},
  journal = {Intel}
} 
@book{Bovet_Cesati_2001,
  place     = {Beijing},
  title     = {Understanding the linux kernel},
  publisher = {O’Reilly},
  author    = {Bovet, Daniel Pierre and Cesati, Marco},
  year      = {2001}
} 

@misc{pcb_1,
  title     = {Implementation of processes and threads by the linux kernel},
  url       = {https://soul-of-a-nameless-bard.medium.com/the-implementation-of-processes-and-threads-by-the-linux-kernel-36adaec746aa},
  journal   = {Medium},
  publisher = {Medium},
  author    = {Bard, Soul Of A Nameless},
  year      = {2022},
  month     = {Jan}
} 
@misc{pcb_2,
  title     = {Linux kernel - task_struct},
  url       = {https://medium.com/@boutnaru/linux-kernel-task-struct-829f51d97275},
  journal   = {Medium},
  publisher = {Medium},
  author    = {Boutnaru, Shlomi},
  year      = {2022},
  month     = {Dec}
} 

@misc{pcb_3,
  title     = {Linux Process vs. Thread},
  url       = {https://www.baeldung.com/linux/process-vs-thread},
  journal   = {Baeldung on Linux},
  publisher = {Baeldung on Linux},
  author    = {Baeldung},
  year      = {2024},
  month     = {Mar}
} 
@inbook{pcb_4,
  place     = {Provo, Utah},
  edition   = {2nd},
  title     = {The Linux Implementation of Threads},
  url       = {https://www.informit.com/articles/article.aspx?p=370047&seqNum=3#:~:text=To%20the%20Linux%20kernel%2C%20there,all%20threads%20as%20standard%20processes.&text=Each%20thread%20has%20a%20unique,space%2C%20with%20other%20processes},
  booktitle = {Linux Kernel Development},
  publisher = {Novell Press},
  author    = {Love, Robert},
  year      = {2005},
  pages     = {33–35}
} 

@inbook{pcb_5,
  place     = {Provo, Utah},
  edition   = {2nd},
  title     = {Linux Kernel Process Management},
  url       = {https://www.informit.com/articles/article.aspx?p=370047},
  booktitle = {Linux Kernel Development},
  publisher = {Novell Press},
  author    = {Love, Robert},
  year      = {2005},
  pages     = {23–33}
} 
@misc{pcb_5,
  title   = {Processes},
  url     = {https://www.win.tue.nl/~aeb/linux/lk/lk-10.html},
  journal = {The linux kernel},
  author  = {Brouwer, Andries},
  year    = {2003},
  month   = {Feb}
} 

@article{protection_rings_1,
  title   = {A hardware architecture for implementing protection rings},
  volume  = {15},
  doi     = {10.1145/361268.361275},
  number  = {3},
  journal = {Communications of the ACM},
  author  = {Schroeder, Michael D. and Saltzer, Jerome H.},
  year    = {1972},
  month   = {Mar},
  pages   = {157–170},
  url     = {https://www.multicians.org/protection.html}
} 

@book{protection_rings_2,
  place     = {Redmond, Washington},
  title     = {Windows internals: Part 1},
  publisher = {Microsoft Press},
  author    = {Russinovich, Mark and Solomon, David A. and Ionescu, Alex},
  year      = {2012},
  isbn      = { 978-0-7356-4873-9},
  pages     = {17},
  edition   = {6th}
} The reason Windows uses only two levels is that some hardware architectures that were supported in the past (such as Compaq Alpha and Silicon Graphics MIPS) implemented only two privilege levels.
 
@misc{process_states_1,
  place     = {Berkeley},
  title     = {Kernel Threads},
  url       = {https://inst.eecs.berkeley.edu/~cs162/fa14//},
  journal   = {CS162: Operating Systems and Systems Programming},
  publisher = {Department of Electrical Engineering and Computer Sciences UC Berkeley},
  author    = {Culler, David E},
  year      = {2014}
} 

@misc{process_states_2,
  title   = {Linux Process States},
  url     = {https://www.baeldung.com/linux/process-states},
  journal = {Baeldung},
  author  = {Ming Jun, Chin},
  year    = {2003},
  month   = {Feb}
}

@misc{priority_levels_1,
  place     = {Wisconsin},
  title     = {Scheduling and CPU Scheduling},
  url       = {https://pages.cs.wisc.edu/~bart/537/lecturenotes/s11.html},
  journal   = {CS 537 Introduction to Operating Systems},
  publisher = {University of Wisconsin, Madison. School of Computer, Data & Information Sciences},
  author    = {Miler, Barton P},
  year      = {2018}
} 

@inbook{scheduler_1,
  place     = {Provo, Utah},
  edition   = {2nd},
  title     = {The Linux Scheduling Algorithm},
  url       = {https://www.informit.com/articles/article.aspx?p=370047&seqNum=3#:~:text=To%20the%20Linux%20kernel%2C%20there,all%20threads%20as%20standard%20processes.&text=Each%20thread%20has%20a%20unique,space%2C%20with%20other%20processes},
  booktitle = {Linux Kernel Development},
  publisher = {Novell Press},
  author    = {Love, Robert},
  year      = {2005},
  pages     = {33–35}
} 

@misc{scheduler_2,
  title     = {Implementation of a Multi-Queue Scheduler for Linux},
  url       = {https://lse.sourceforge.net/scheduling/mq1.html},
  publisher = {IBM Linux Technology Center},
  author    = {Kravetz, Mike and Franke, Hubertus},
  year      = {2001},
  edition   = {0.2}
} 

@misc{scheduler_3,
  title   = {EEVDF scheduler may be ready for landing with linux 6.6},
  url     = {https://www.phoronix.com/news/Linux-6.6-EEVDF-Likely},
  journal = {Phoronix},
  author  = {Larabel, Michael},
  year    = {2023},
  month   = {Aug}
} 

@misc{scheduler_4,
  title   = {An EEVDF CPU scheduler for linux},
  url     = {https://lwn.net/Articles/925371/},
  journal = {[LWN.net]},
  author  = {Corbet, Jonathan},
  year    = {2023},
  month   = {Mar}
} 

@article{priority_inversion_1,
  author     = {Lampson, Butler W. and Redell, David D.},
  title      = {Experience with processes and monitors in Mesa},
  year       = {1980},
  issue_date = {Feb. 1980},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {23},
  number     = {2},
  issn       = {0001-0782},
  url        = {https://doi.org/10.1145/358818.358824},
  doi        = {10.1145/358818.358824},
  journal    = {Commun. ACM},
  month      = {feb},
  pages      = {105–117},
  numpages   = {13},
  keywords   = {variable, task, synchronization, process, operating system, monitor, module, deadlock, condition, concurrency}
}

@article{priority_inversion_2,
  author     = {Sha, L. and Rajkumar, R. and Lehoczky, J. P.},
  title      = {Priority Inheritance Protocols: An Approach to Real-Time Synchronization},
  year       = {1990},
  issue_date = {September 1990},
  publisher  = {IEEE Computer Society},
  address    = {USA},
  volume     = {39},
  number     = {9},
  issn       = {0018-9340},
  url        = {https://doi.org/10.1109/12.57058},
  doi        = {10.1109/12.57058},
  abstract   = {An investigation is conducted of two protocols belonging to the priority inheritance protocols class; the two are called the basic priority inheritance protocol and the priority ceiling protocol. Both protocols solve the uncontrolled priority inversion problem. The priority ceiling protocol solves this uncontrolled priority inversion problem particularly well; it reduces the worst-case task-blocking time to at most the duration of execution of a single critical section of a lower-priority task. This protocol also prevents the formation of deadlocks. Sufficient conditions under which a set of periodic tasks using this protocol may be scheduled is derived.},
  journal    = {IEEE Trans. Comput.},
  month      = {sep},
  pages      = {1175–1185},
  numpages   = {11},
  keywords   = {worst-case task-blocking time, uncontrolled priority inversion, real-time systems., real-time synchronization, protocols, priority inheritance protocols, priority ceiling protocol, periodic tasks, operating systems (computers), deadlocks, basic priority inheritance protocol}
}

@misc{priority_inversion_mars_1,
  title     = {What really happened on Mars ?},
  publisher = {University of North Carolina},
  author    = {Reeves, Glenn E},
  year      = {1997},
  month     = {Dec},
  url       = {https://www.cs.unc.edu/~anderson/teach/comp790/papers/mars_pathfinder_long_version.html}
} 

@misc{priority_inversion_mars_2,
  url       = {https://www3.nd.edu/~cpoellab/teaching/cse40463/slides8.pdf},
  title     = {Mars Pathfinder Incident},
  journal   = {Mobile computing Lab - Real-Time Systems },
  publisher = {University of Notre Dame},
  author    = {Poellabauer, Christian}
} 

@misc{priority_inversion_linux,
  title     = {The Linux Foundation Wiki},
  url       = {https://wiki.linuxfoundation.org/realtime/documentation/technical_basics/pi},
  journal   = {Priority inversion - priority inheritance},
  publisher = {The Linux Foundation},
  author    = {Open Source},
  year      = {2016},
  month     = {Jun}
} 

@misc{priority_inversion_windows,
  title     = {Priority inversion - win32 apps},
  url       = {https://learn.microsoft.com/en-us/windows/win32/procthread/priority-inversion?redirectedfrom=MSDN},
  journal   = {Win32 apps | Microsoft Learn},
  publisher = {Microsoft},
  author    = {Bridge, Karl and Sharkey, Kent and Satran, Michael},
  year      = {2024},
  month     = {Mar}
} 

@misc{linux_boot_process,
  title     = {Inside the Linux boot process},
  url       = {https://web.archive.org/web/20071011074709/http://www.ibm.com/developerworks/library/l-linuxboot/index.html},
  journal   = {DeveloperWorks},
  publisher = {IBM},
  author    = {Jones, Tim},
  year      = {2006},
  month     = {May}
} 

@misc{multiprocessing_1,
  title   = {Multiprocessing - process-based parallelism},
  url     = {https://docs.python.org/3/library/multiprocessing.html},
  journal = {Python documentation},
  author  = {Python Software Foundation},
  year    = {2024}
} 